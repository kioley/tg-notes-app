import type { Folder, ID } from '../types/index.ts'

// ===== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ü–ê–ü–ö–ê–ú–ò =====

// –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø–∞–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function getFoldersForUser(userId: number): Promise<Folder[]> {
  console.log(`üìÅ Getting folders for user ${userId}`)
  
  // TODO: –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –ë–î
  return [
    { id: 1, userId, name: '–õ–∏—á–Ω–æ–µ', notesCount: 2 },
    { id: 2, userId, name: '–†–∞–±–æ—Ç–∞', notesCount: 0 },
    { id: 3, userId, name: '–ò–¥–µ–∏', notesCount: 1 }
  ]
}

// –°–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function createFolderForUser(userId: number, name: string): Promise<Folder> {
  console.log(`üìÅ Creating folder "${name}" for user ${userId}`)
  
  // TODO: –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –ë–î
  const newFolder: Folder = {
    id: Math.floor(Math.random() * 1000) + 4, // –≤—Ä–µ–º–µ–Ω–Ω—ã–π ID
    userId,
    name: name.trim(),
    notesCount: 0
  }
  
  return newFolder
}

// –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function deleteFolderForUser(folderId: ID, userId: number): Promise<boolean> {
  console.log(`üìÅ Deleting folder ${folderId} for user ${userId}`)
  
  // TODO: –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –ë–î
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
  return true // –∑–∞–≥–ª—É—à–∫–∞ - –≤—Å–µ–≥–¥–∞ —É—Å–ø–µ—à–Ω–æ
}